
@startuml
skinparam ConditionEndStyle hline
!pragma useVerticalIf on
start


if (fslroi?) then (yes)
    partition "**Volume Extraction**" {
        if (volume in\nmain_image_params?) then (yes)
            :extract specified\nvolume via fslroi;
        else (no)
            :extract center\nvolume via fslroi;
        endif
        :change input image\nto extracted volume;
    }
else (no)
endif
if (fslbet?) then (yes)
    partition "**Brain Extraction**" {
        :perform brain extraction\nvia FSL's bet;
        :create binary\nbrain mask;
        :change input image\nto brain-extracted image;
        if (secondary_image_params?) then (yes)
            :apply brain mask\nto secondary image;
            :change secondary image\nto brain-extracted image;
        else (no)
        endif
    }
else (no)
endif



partition "**Registration**" {
    :prepare FSL's FLIRT;
    if (reference_image_params 'type') then (std)
        :extract output bids labels\nfrom standard_reference_params;
    else
        :extract output bids labels\nfrom reference_image_params;
    endif
    :perform FLIRT;
    :invert output\ntransform;
    :create registration\noverlays;

    if (secondary_image_params?) then (yes)
        :apply transform to\nsecondary image;
        :create registration\noverlays for secondary image;
    else (no)
    endif

    if (standard_reference_params) then (yes)
        if (reference_image_params 'type') then (std)
        else
            :concatenate reference-to-standard\ntransform with input-to-reference;
            :apply transform to\ninput image;
            :create registration\noverlays;
            :invert output\ntransform;
            if (secondary_image_params?) then (yes)
                :apply transform\nto secondary image;
                :create registration\noverlays;
            else (no)
            endif
        endif
    endif
}
        

end

@enduml