4.4.	Generalized Python Data Processing Functions
The functions below describe common processes performed in the analysis of MRI data. We have take the approach of utilizing JSON files to minimize the command line input necessary to perform this processing. Also, each program is batched through the utilization of MySQL queries formatted using input provided by these JSON files. Although each program is batched, and single-file analyses are not the focus of these programs (however they can be performed by modifying the queries), each function only processes data if output data from each program is not detected (on either the AWS S3 bucket, MySQL database, or local s3/scratch directories) unless the overwrite flag is specified. 
NOTE: some of the functions described below do need to be modified when new projects are added. Functionality to eliminate this modification needs to be developed and implemented.
4.4.1.	kaas_dcm2nii.py
Function to convert raw dicom images exported by MRI or other acquisition technologies to NIfTI format. The function inputs are detailed in Table 12. This function will output *somewhat* random filenames in the format:
<containing folder name>_sequence name>_<series number>.nii.gz.
Each NIfTI image will contain a limited header copied from the DICOM images and the images themselse. Additional header information will be stored in JSON and txt files (with the same names as the NIfTI images) that are also output in the conversion process. 
This program utilizes the dcm2niix conversion package from MRIcro. MRIcro is a rendering and conversion software package developed at Chris Rorden’s Neuropsychology Lab at University of South Carolina and is the distributed by NeuroImaging and Resources Collaboratory (NITRC).
This function will query the selected table/database for any DICOM files in the “raw_data” directory. Output NIfTI files will be placed in a folder in the scratch directory in correspondence with the input DICOM directory. A flowchart detailing the high-level programmatic steps of this program are outlined in Figure 5.
